//
//  PrefixHeader.pch
//  video
//
//  Created by nian on 2021/3/10.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#import <Masonry/Masonry.h>
#import "LocalStringObj.h"
#import "VPKCUIViewExt.h"
#import "BaseViewController.h"
#import "HXBaseViewController.h"
#import "HXBaseNavgationController.h"
#import "MJRefresh.h"
#import "hxViewController.h"
#import "hxpushViewController.h"
#import "ShapeView.h"
#import "DHGuidePageHUD.h"
#import "UHud.h"
#import "LoginViewController.h"
#import "BadgeButton.h"
#import "UIView+lcAnyCorners.h"
#import "interfaceHeader.h"  ///URL头文件
#import "iphoneClass.h"
#import "HttpManagement.h"
#import "YTSliderView.h"
#import "ZGQActionSheetView.h"
#import "UIImageView+WebCache.h"

////////////   3.13日添加 头文件
#import <MJRefresh/MJRefresh.h>
#import <ReactiveObjC/ReactiveObjC.h>
#import <HYBImageCliped/HYBImageCliped.h>
#import "KJPlayerHeader.h"

///// 网络请求加密
#import "AES.h"
#import "RSA.h"
#import "jiemishujuClass.h"

/// User Custom File
/// 协议
#import "CMHConfigureCell.h"
#import "MHNavigationController.h"


/// YYKit
#import "YYText.h"
#import "YYCategories.h"
#import "YYModel.h"
#import "YYWebImage.h"
#import <IQKeyboardManager/IQKeyboardManager.h>
// category
#import "UIBarButtonItem+MHExtension.h"
#import "UIAlertController+MHColor.h"
#import "UIView+MH.h"
#import "UIFont+MHExtension.h"
#import "NSString+MH.h"
#import "UINavigationController+FDFullscreenPopGesture.h"
#import "NSObject+MH.h"
#import "Colours.h"
#import "UIImage+MH.h"
#import "UIViewController+MHDismissKeyboard.h"
#import "UIViewController+MHHUD.h"
#import "NSDate+Extension.h"
#import "MBProgressHUD+MHExtension.h"
#import "HJCornerRadius.h"
#import "UIImageView+CornerRadius.h"
#import "NSError+MHExtension.h"
#import "UITableView+MHExtension.h"
#import "BlocksKit.h"
#import "BlocksKit+UIKit.h"


// tool
#import "MHWebImageTool.h"
#import "MHSingleton.h"
#import "Masonry.h"
#import "CMHFileManager.h"
#import "KVOController.h"


#import "FBKVOController+MHExtension.h"
#import "UIScrollView+MHRefresh.h"
#import "UIScrollView+CMHRefresh.h"
#import "YYCache+CMHHelper.h"
#import "SAMKeychain+CMHUtil.h"
// UIKit
#import "MHButton.h"

#import "MHImageView.h"
#import "MHDivider.h"
#import "MHBackButton.h"

// 模型
#import "AppDelegate.h"
#import "CMHHTTPService.h"

#import "VideoRankMode.h"
#import "DYModelMaker.h"
#import <NSObject+YYModel.h>
/// 常量
//#import "SUConstant.h"
#import "MHInline.h"
#import "MHConstant.h"

///7.27日添加
//p2p加速
#import <SwarmCloudSDK/SwarmCloudSDK.h>


////////////   3.14日添加 头文件


#ifdef DEBUG
#define NSLog(...) NSLog(__VA_ARGS__)

#define debugMethod() NSLog(@"%s", __func__)
#else
#define NSLog(...)

#define debugMethod()
#endif
#define FontName    @"Arial"
#define Font(a)      [UIFont fontWithName:FontName size:a]
#define UTitleColor    [UIColor whiteColor]

#define DqLocalizedString(s) [LocalStringObj LocalizedString:s]

#define PI 3.14
#define RGBA(r,g,b,a) [UIColor colorWithRed:r / 255.0 green:g / 255.0 blue:b / 255.0 alpha:a]

#define RGB(r,g,b) [UIColor colorWithRed:r / 255.0 green:g / 255.0 blue:b / 255.0 alpha:1]
/// ---- WeChat --
/// 全局青色 tintColor
#define CMH_MAIN_TINTCOLOR [UIColor colorWithRed:(10 / 255.0) green:(193 / 255.0) blue:(42 / 255.0) alpha:1]

// 启动图路径
#define klaunch_path     [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject]  stringByAppendingPathComponent:@"launch.archiver"]


#define SCREEN_WIDTH [UIScreen mainScreen].bounds.size.width
#define SCREENH_HEIGHT [UIScreen mainScreen].bounds.size.height
#define KHistorySearchPath [[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject] stringByAppendingPathComponent:@"PYSearchhistories.plist"]

//字符串是否为空
#define kStringIsEmpty(str) ([str isKindOfClass:[NSNull class]] || str == nil || [str length] < 1 ? YES : NO )
//数组是否为空
#define kArrayIsEmpty(array) (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)
//字典是否为空
#define kDictIsEmpty(dic) (dic == nil || [dic isKindOfClass:[NSNull class]] || dic.allKeys == 0)

//是否是空对象
#define kObjectIsEmpty(_object) (_object == nil \
|| [_object isKindOfClass:[NSNull class]] \
|| ([_object respondsToSelector:@selector(length)] && [(NSData *)_object length] == 0) \
|| ([_object respondsToSelector:@selector(count)] && [(NSArray *)_object count] == 0))

//判断是否为iPad
#define IS_IPAD ([[[UIDevice currentDevice] model] isEqualToString:@"iPad"])
//#define kIs_iPhoneX (SCREEN_WIDTH >=375.0f && SCREENH_HEIGHT >=812.0f) && !IS_IPAD

#define kIs_iPhoneX [iphoneClass isiPhoneXByHeight] && !IS_IPAD 



/*状态栏高度*/
#define kStatusBarHeight (CGFloat)(kIs_iPhoneX?(44.0):(20.0))
/*导航栏高度*/
#define kNavBarHeight (44)
/*状态栏和导航栏总高度*/
#define kNavBarAndStatusBarHeight (CGFloat)(kIs_iPhoneX?(88.0):(64.0))
/*TabBar高度*/
#define kTabBarHeight (CGFloat)(kIs_iPhoneX?(49.0 + 34.0):(49.0))
/*顶部安全区域远离高度*/
#define kTopBarSafeHeight (CGFloat)(kIs_iPhoneX?(44.0):(0))
/*底部安全区域远离高度*/
#define kBottomSafeHeight (CGFloat)(kIs_iPhoneX?(34.0):(0))
/*iPhoneX的状态栏高度差值*/
#define kTopBarDifHeight (CGFloat)(kIs_iPhoneX?(24.0):(0))
/*导航条和Tabbar总高度*/
#define kNavAndTabHeight (kNavBarAndStatusBarHeight + kTabBarHeight)








//////////////  3.13移植

/// 类型相关
#define MH_IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define MH_IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
#define MH_IS_RETINA ([[UIScreen mainScreen] scale] >= 2.0)

/// 屏幕尺寸相关
#define MH_SCREEN_WIDTH  ([[UIScreen mainScreen] bounds].size.width)
#define MH_SCREEN_HEIGHT ([[UIScreen mainScreen] bounds].size.height)
#define MH_SCREEN_BOUNDS ([[UIScreen mainScreen] bounds])
#define MH_SCREEN_MAX_LENGTH (MAX(MH_SCREEN_WIDTH, MH_SCREEN_HEIGHT))
#define MH_SCREEN_MIN_LENGTH (MIN(MH_SCREEN_WIDTH, MH_SCREEN_HEIGHT))

/// 手机类型相关
#define MH_IS_IPHONE_4_OR_LESS  (MH_IS_IPHONE && MH_SCREEN_MAX_LENGTH  < 568.0)
#define MH_IS_IPHONE_5          (MH_IS_IPHONE && MH_SCREEN_MAX_LENGTH == 568.0)
#define MH_IS_IPHONE_6          (MH_IS_IPHONE && MH_SCREEN_MAX_LENGTH == 667.0)
#define MH_IS_IPHONE_6P         (MH_IS_IPHONE && MH_SCREEN_MAX_LENGTH == 736.0)
#define MH_IS_IPHONE_X          (MH_IS_IPHONE && MH_SCREEN_MAX_LENGTH == 812.0)
/// 导航条高度
#define MH_APPLICATION_TOP_BAR_HEIGHT (MH_IS_IPHONE_X?88.0f:64.0f)
/// tabBar高度
#define MH_APPLICATION_TAB_BAR_HEIGHT (MH_IS_IPHONE_X?83.0f:49.0f)
/// 工具条高度 (常见的高度)
#define MH_APPLICATION_TOOL_BAR_HEIGHT_44  44.0f
#define MH_APPLICATION_TOOL_BAR_HEIGHT_49  49.0f
/// 状态栏高度
#define MH_APPLICATION_STATUS_BAR_HEIGHT (MH_IS_IPHONE_X?44:20.0f)

// IOS版本
#define MHIOSVersion [[[UIDevice currentDevice] systemVersion] floatValue]
#define MH_iOS7_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 7.0)
#define MH_iOS8_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 8.0)
#define MH_iOS9_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 9.0)
#define MH_iOS10_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 10.0)


// 适配AF
#ifndef TARGET_OS_IOS

#define TARGET_OS_IOS TARGET_OS_IPHONE

#endif

#ifndef TARGET_OS_WATCH

#define TARGET_OS_WATCH 0

#endif
/// 适配iPhone X + iOS 11
#define  MHAdjustsScrollViewInsets_Never(__scrollView)\
do {\
_Pragma("clang diagnostic push")\
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"")\
if ([__scrollView respondsToSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:")]) {\
NSMethodSignature *signature = [UIScrollView instanceMethodSignatureForSelector:@selector(setContentInsetAdjustmentBehavior:)];\
NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:signature];\
NSInteger argument = 2;\
invocation.target = __scrollView;\
invocation.selector = @selector(setContentInsetAdjustmentBehavior:);\
[invocation setArgument:&argument atIndex:2];\
[invocation retainArguments];\
[invocation invoke];\
}\
_Pragma("clang diagnostic pop")\
} while (0)
// KVO获取监听对象的属性 有自动提示
// 宏里面的#，会自动把后面的参数变成c语言的字符串
#define MHKeyPath(objc,keyPath) @(((void)objc.keyPath ,#keyPath))


// 颜色
#define MHColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]

// 颜色+透明度
#define MHAlphaColor(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]


// 随机色
#define MHRandomColor MHColor(arc4random_uniform(256), arc4random_uniform(256), arc4random_uniform(256))
// 根据rgbValue获取值
#define MHColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]
/// 全局细下滑线颜色 以及分割线颜色
#define SUGlobalBottomLineColor     [UIColor colorFromHexString:@"#D9D9D9"]
// 是否为iOS7+
#define MHIOS7 ([[UIDevice currentDevice].systemVersion doubleValue] >= 7.0)

// 是否为4inch
#define MHFourI
// 屏幕总尺寸
#define MHMainScreenBounds  [UIScreen mainScreen].bounds
#define MHMainScreenHeight  [UIScreen mainScreen].bounds.size.height
#define MHMainScreenWidth   [UIScreen mainScreen].bounds.size.width


// 日记输出宏
#ifdef DEBUG // 调试状态, 打开LOG功能
#define MHLog(...) NSLog(__VA_ARGS__)
#else // 发布状态, 关闭LOG功能
#define MHLog(...)
#endif

// 打印方法
#define MHLogFunc MHLog(@"%s", __func__)

///判断是否为NSNull
#define NULL_TO_NIL(obj) ({ __typeof__ (obj) __obj = (obj); __obj == [NSNull null] ? nil : obj; })

// 打印请求错误信息
#define MHLogErrorMessage  MHLog(@"错误请求日志-----【 %@ 】--【 %@ 】",[self class] , error.mh_message)
// 销毁打印
#define MHDealloc MHLog(@"\n =========+++ %@  销毁了 +++======== \n",[self class])
// 是否为空对象
#define MHObjectIsNil(__object)  ((nil == __object) || [__object isKindOfClass:[NSNull class]])

// 字符串为空
#define MHStringIsEmpty(__string) ((__string.length == 0) || MHObjectIsNil(__string))

// 字符串不为空
#define MHStringIsNotEmpty(__string)  (!MHStringIsEmpty(__string))

// 数组为空
#define MHArrayIsEmpty(__array) ((MHObjectIsNil(__array)) || (__array.count==0))
// 系统放大倍数
#define MHScale [[UIScreen mainScreen] scale]

/**
 *  Frame PX  ---> Pt 6的宽度 全部向下取整数
 */
#define MHPxConvertPt(__Px) floor((__Px) * MHMainScreenWidth/375.0f)
/**
 *  Frame PX  ---> Pt 6的宽度 返回一个合适的值 按钮手指触摸点 44
 */
#define MHFxConvertFitPt(__px) (MAX(MHPxConvertPt(__Px),44))


// 设置图片
#define MHImageNamed(__imageName) [UIImage imageNamed:__imageName]






///////////////  广告视频播放 头文件

/** 自定义宏 */
// 宽高
#define WIDTH  [UIScreen mainScreen].bounds.size.width
#define HEIGHT [UIScreen mainScreen].bounds.size.height

// 颜色
#define XMRGBColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]
#define XMRGBAColor(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]

/** iphoneX设备导航栏比其他的导航栏高出的距离 */
#define iPhoneX_To_Other_Nav_Height_Difference 24
/** iphoneX设备底部比其他的底部高出的距离 */
#define iPhoneX_To_Other_Bottom_Height_Difference 34
/** iphoneX nav高度 */
#define iPhone_Nav_Height 64
/** iphone Tabbar高度 */
#define iPhone_Tabbar_Height 49
/** iphoneX Nav高度 */
#define iPhoneX_Nav_Height (iPhone_Nav_Height+iPhoneX_To_Other_Nav_Height_Difference)
/** iphoneX Tabbar高度 */
#define iPhoneX_Tabbar_Height (iPhone_Tabbar_Height+iPhoneX_To_Other_Bottom_Height_Difference)
/** Nav高度 */
#define NavFrame (IS_PhoneX?CGRectMake(0, 0, WIDTH, iPhoneX_Nav_Height):CGRectMake(0, 0, WIDTH, iPhone_Nav_Height))

/************************ main ******************************/

/**
 *  图片动画时长
 */
#define XMImageAnimationDuration 0.15f

/**
 *  图字体
 */
#define XM18Font [UIFont systemFontOfSize:18]

/************************ 文字提示 ******************************/
#define XMNetFialText @"网络连接失败"
#define XMVideoUrlText @"请输入视频地址"
#define XMVideoPlayFialText @"播放失败"
#define XMVideoDownFinish  @"下载完成"

/************************ 菊花 ******************************/

/**
 *  旋转菊花的颜色
 */
#define XMRefreshColor [UIColor whiteColor].CGColor


// 竖屏
#define AppDelegateOrientationMaskPortrait [(AppDelegate *)[UIApplication sharedApplication].delegate setrotateOrientation:UIInterfaceOrientationMaskPortrait];
// 竖屏，横屏
#define AppDelegateOrientationMaskLandscape [(AppDelegate *)[UIApplication sharedApplication].delegate setrotateOrientation:UIInterfaceOrientationMaskPortrait | UIInterfaceOrientationMaskLandscapeLeft | UIInterfaceOrientationMaskLandscapeRight];

// 开启侧滑返回
#define PopGestureRecognizerOpen self.navigationController.interactivePopGestureRecognizer.enabled = YES;
// 取消侧滑返回
#define PopGestureRecognizerCancel self.navigationController.interactivePopGestureRecognizer.enabled = NO;





#endif /* PrefixHeader_pch */
